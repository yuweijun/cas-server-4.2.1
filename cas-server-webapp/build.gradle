apply plugin: 'war'
apply plugin: "org.akhikhl.gretty"

description = 'Apereo CAS Web Application'

ext {
    jettySslConfigEnabled = project.hasProperty('jettySslKeyStorePath') && 
                            project.hasProperty('jettySslTrustStorePath') &&
                            project.hasProperty('jettySslTrustStorePassword') &&
                            project.hasProperty('jettySslKeyStorePassword')
}

javadoc {
    enabled false
}

war {
    manifest {
        attributes("Implementation-Title": project.name,
                "Implementation-Vendor": project.group,
                "Created-By": project.group,
                "Implementation-Date": new Date(),
                "Implementation-Version": project.version)
    }
}

dependencies {
    compile project(':cas-server-webapp-support')
    compile project(':cas-server-support-jdbc')
    compile project(':cas-server-core')
    compile project(':cas-server-core-monitor')
    compile project(':cas-server-core-authentication')
    compile project(':cas-server-core-services')
    compile project(':cas-server-core-logout')
    compile project(':cas-server-core-audit')
    compile project(':cas-server-core-logging')
    compile project(':cas-server-core-tickets')
    compile project(':cas-server-core-web')
    compile project(':cas-server-core-validation')
    compile project(':cas-server-core-util')
    compile project(':cas-server-webapp-throttle')
    compile project(':cas-server-webapp-actions')
    compile project(':cas-server-webapp-cookie')
    compile project(':cas-server-webapp-reports')
    compile project(':cas-server-webapp-themes')
    compile project(':cas-server-webapp-validation')

    compile(group: 'org.pac4j', name: 'spring-webmvc-pac4j', version: springWebmvcPac4jVersion) {
        exclude(group: 'org.springframework', module: 'spring-webmvc')
        exclude(group: 'org.springframework', module: 'spring-core')
        exclude(group: 'org.pac4j', module: 'pac4j-core')
    }
    compile group: 'org.pac4j', name: 'pac4j-core', version: pac4jVersion
    compile(group: 'org.pac4j', name: 'pac4j-http', version: pac4jVersion) {
    }
    compile group: 'com.lmax', name: 'disruptor', version: disruptorVersion
    runtime group: 'org.springframework', name: 'spring-expression', version: springVersion
    runtime group: 'javax.servlet', name: 'jstl', version: javaxJstlVersion
    runtime group: 'org.jasig.cas', name: 'cas-server-security-filter', version: casSecurityFilterVersion
    runtime(group: 'com.ryantenney.metrics', name: 'metrics-spring', version: dropwizardMetricsVersion) {
        exclude(group: 'org.slf4j', module: 'slf4j-api')
        exclude(group: 'org.springframework', module: 'spring-core')
        exclude(group: 'org.springframework', module: 'spring-beans')
        exclude(group: 'org.springframework', module: 'spring-context-support')
        exclude(group: 'org.springframework', module: 'spring-aop')
    }
    runtime(group: 'io.dropwizard.metrics', name: 'metrics-jvm', version: dropwizardMetricsVersion) {
        exclude(group: 'org.slf4j', module: 'slf4j-api')
    }
    runtime(group: 'io.dropwizard.metrics', name: 'metrics-servlets', version: dropwizardMetricsVersion) {
        exclude(group: 'org.slf4j', module: 'slf4j-api')
        exclude(group: 'com.fasterxml.jackson.core', module: 'jackson-databind')
    }
    runtime group: 'org.apache.logging.log4j', name: 'log4j-web', version: log4jVersion
    runtime(group: 'org.jasig', name: 'spring-webflow-client-repo', version: springWebflowClientVersion) {
        exclude(group: 'log4j', module: 'log4j')
        exclude(group: 'org.slf4j', module: 'slf4j-api')
        exclude(group: 'org.slf4j', module: 'slf4j-log4j12')
        exclude(group: 'org.springframework.webflow', module: 'spring-webflow')
        exclude(group: 'org.springframework', module: 'spring-web')
        exclude(group: 'commons-codec', module: 'commons-codec')
        exclude(group: 'org.springframework', module: 'spring-core')
        exclude(group: 'org.springframework', module: 'spring-beans')
        exclude(group: 'org.bouncycastle', module: 'bcprov-jdk15on')
    }
    runtime group: 'com.mchange', name: 'c3p0', version: c3p0Version
    runtime group: 'org.bouncycastle', name: 'bcprov-jdk15on', version:bouncyCastleVersion
    runtime group: 'mysql', name: 'mysql-connector-java', version: '5.1.31'
}

configurations {
    grettyRunnerJetty9 {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.ow2.asm') {
                details.useVersion('5.0.3')
            }
            if (details.requested.group == 'org.glassfish'
                    && details.requested.name == 'javax.el') {
                details.useVersion(javaxElVersion)
            }
        }
    }
}

gretty {
    jvmArgs = ["-DloggerFactory=org.apache.logging.slf4j.Log4jLoggerFactory", "-Dorg.eclipse.jetty.annotations.maxWait=120","-Xdebug",
               "-Xrunjdwp:transport=dt_socket,address=5000,server=y,suspend=n"]
    scanInterval = 5
    contextPath = '/cas'
    httpsEnabled = project.ext.jettySslConfigEnabled
    if (project.ext.jettySslConfigEnabled) {
        httpsPort = 8443
        sslKeyStorePath = project.ext.jettySslKeyStorePath
        sslKeyStorePassword = project.ext.jettySslKeyStorePassword
        sslTrustStorePath = project.ext.jettySslTrustStorePath
        sslTrustStorePassword = project.ext.jettySslTrustStorePassword
    }
}
